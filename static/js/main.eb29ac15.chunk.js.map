{"version":3,"sources":["Components/Card/card.jsx","Components/Card-list/card-list.jsx","Components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAEaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UACTC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACH,6BAAML,EAAMI,QAAQE,OACpB,6BAAKN,EAAMI,QAAQG,YCHdC,G,MAAW,SAACR,GACvB,OAEE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAAWA,GAAvBA,EAAQC,WCNdM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACvB,uBACAZ,UAAU,SACRa,KAAK,SACNF,YAAeA,EACdG,SAAUF,MCiCCG,E,kDAnCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAZrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAM/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAC1B,GAAD,OACvCA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYc,wBAGlD,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eACrB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA9BVK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eb29ac15.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.css'\r\nexport const Card = (props) =>  (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set4?size=100x100`} />\r\n        <h2 >{props.monster.name}</h2>\r\n        <h2>{props.monster.email}</h2>\r\n\r\n    </div>\r\n)","import React from \"react\";\r\nimport { Card } from \"../Card/card\";\r\nimport \"./card-list.css\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    \r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster = {monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.css\";\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n  <input\r\n  className=\"search\"\r\n    type=\"search\"\r\n   placeholder = {placeholder}\r\n    onChange={handleChange} />);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./Components/Card-list/card-list\";\nimport { SearchBox } from \"./Components/search-box/search-box\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = e => {\n    this.setState({searchField: e.target.value})\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search monsters\"\n          handleChange={this.handleChange}   />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}